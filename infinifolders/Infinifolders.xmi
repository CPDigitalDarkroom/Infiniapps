/* License {{{ */

/*
 * Copyright (c) 2010-2014, Xuzz Productions, LLC
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* }}} */

/* Configuration {{{ */
#define IFConfigurationTweakIdentifier Infinifolders
#define IFConfigurationListClass SBFolderIconListView
#define IFConfigurationBottomPadding (IFDeviceIsPad() ? (UIInterfaceOrientationIsLandscape([IFIconControllerSharedInstance() orientation]) ? -8.0f : -13.0f) : 3.0f)
/* }}} */

#import "infinishared/Infinilist.h"

/* IFInfinifolders {{{ */

%group IFInfinifolders

%hook SBFolderView

- (CGFloat)_contentHeightForRows:(NSUInteger)rows {
    SBIconListView *listView = MSHookIvar<SBIconListView *>(self, "_iconListView");

    NSUInteger defaultRows = IFSizingDefaultDimensionsForIconList(listView).rows;
    NSUInteger minimumRows = IFMinimum(rows, defaultRows);

    return %orig(minimumRows);
}

%end

%hook SBFolderIcon

+ (NSUInteger)_maxIconsInGridImage {
    NSUInteger maxIcons = 0;

    IFFlag(IFFlagDefaultDimensions) {
        maxIcons = %orig;
    }

    return maxIcons;
}

- (NSUInteger)_numberOfExcessIcons {
    // FIXME: This is a lie (maxIcons % 3 != 0).
    return 0;
}

static int disableMaxFlag = 0;

- (NSUInteger)_maxIcons {
    if (disableMaxFlag) {
        // Tihs fixes a speed issue on iOS 5 with too large of an image backing the folder icons.
        NSArray *allIcons = [[self folder] allIcons];
        NSUInteger icons = [allIcons count];
        icons += [self _gridColumns];

        NSUInteger orig = 0;

        IFFlag(IFFlagDefaultDimensions) {
            orig = %orig;
        }

        if (icons < orig) icons = orig;

        return icons;
    } else {
        return %orig;
    }
}

- (id)_miniIconGridWithSkipping:(BOOL)skipping {
    id orig = nil;

    IFFlag(disableMaxFlag) {
        orig = %orig;
    }

    return orig;
}

%end

%hook SBFolder

- (BOOL)isFull {
    return NO;
}

%end

%hook SBIconController

- (void)_openCloseFolderAnimationEnded:(id)ended finished:(id)finished context:(void *)context {
    // FIXME: Find the open folder list view (and thus scroll view) in a better way than querying our arrays.
    if ([IFListsScrollViews count] > 0) [[IFListsScrollViews objectAtIndex:0] flashScrollIndicators];
    %orig;
}

- (NSUInteger)_folderRowsForFolder:(SBFolder *)folder inOrientation:(UIInterfaceOrientation)orientation {
    NSUInteger computedRows = %orig;
    NSUInteger defaultRows = _IFSizingDefaultDimensionsForOrientation(orientation).rows; // FIXME: don't use private function here

    return IFMinimum(computedRows, defaultRows);
}

%end

%end

/* }}} */

/* Constructor {{{ */

__attribute__((constructor)) static void infinifolders_init() {
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];

    dlopen("/Library/MobileSubstrate/DynamicLibraries/_iPhoneRotator.dylib", RTLD_LAZY);
    dlopen("/Library/MobileSubstrate/DynamicLibraries/moreicons.dylib", RTLD_LAZY);

    IFPreferencesInitialize(@"com.chpwn.infinifolders", IFPreferencesApply);

    dlopen("/Library/MobileSubstrate/DynamicLibraries/IconSupport.dylib", RTLD_LAZY);
    [[objc_getClass("ISIconSupport") sharedInstance] addExtension:@"infinifolders"];

    %init(IFInfinifolders);
    %init(IFBasic);

    [pool release];
}

/* }}} */

