
/* Configuration {{{ */
#define IFIconList SBFolderIconListView
#define IFBottomPadding (IFDeviceIsPad() ? (UIInterfaceOrientationIsLandscape(IFDeviceCurrentInterfaceOrientation()) ? -8.0f : -13.0f) : 3.0f)
#define IFDefaultRowsForOrientation(o) ((IFDeviceIsPad()) ? (UIInterfaceOrientationIsLandscape(o) ? 4 : 5) : (UIInterfaceOrientationIsLandscape(o) ? 2 : 3))
#define IFUseGridlock NO
/* }}} */

#import <infinishared/Infinilist.h>

/* Prototypes {{{ */

@interface SBFolderIcon : NSObject {
}

- (int)_numberOfExcessIcons;
- (int)_maxIcons;
- (int)_gridColumns;
- (id)_miniIconGridWithSkipping:(BOOL)skipping;
- (id)folder;

@end

/* }}} */
/* IFInfinifolders {{{ */

%group IFInfinifolders

%hook SBFolderIcon

- (unsigned int)_numberOfExcessIcons {
    // XXX: This is a lie (maxIcons % 3 != 0).
    return 0;
}

static int disableMaxFlag = 0;

- (unsigned int)_maxIcons {
    if (disableMaxFlag > 0) {
        // Tihs fixes a speed issue on iOS 5 with too
        // large of an image backing the folder icons.
        int icons = [[[[[self folder] lists] lastObject] icons] count];
        icons += [self _gridColumns];

        disableRowsFlag += 1;
        int orig = %orig;
        disableRowsFlag -= 1;

        if (icons < orig) icons = orig;

        return icons;
    } else {
        return %orig;
    }
}

- (id)_miniIconGridWithSkipping:(BOOL)skipping {
    disableMaxFlag += 1;
    id orig = %orig;
    disableMaxFlag -= 1;
    return orig;
}

%end

%hook SBFolder

- (BOOL)isFull {
    return NO;
}

%end

%hook SBIconController

- (void)_openCloseFolderAnimationEnded:(id)ended finished:(id)finished context:(void *)context {
    // XXX: this is a hack. flashes scroll indicators for Infinifolders folders when opened.
    if ([scrollies count] > 0) [[scrollies objectAtIndex:0] flashScrollIndicators];
    %orig;
}

%end

%hook SBFolderView

typedef struct { int direction; CGRect rect; } SBNotchInfo;

- (id)initWithRows:(int)rows notchInfo:(SBNotchInfo)notchInfo {
    IFFixListHeights();
    return %orig(MIN(rows, DEFAULT_ROWS_FOR_ORIENTATION(IFDeviceCurrentInterfaceOrientation())), notchInfo);
}

- (id)initWithRows:(int)rows notchInfo:(SBNotchInfo)notchInfo orientation:(int)orientation {
    IFFixListHeights();
    return %orig(MIN(rows, DEFAULT_ROWS_FOR_ORIENTATION(orientation)), notchInfo, orientation);
}

- (void)setRows:(int)rows notchInfo:(SBNotchInfo)notchInfo orientation:(int)orientation {
    IFFixListHeights();
    return %orig(MIN(rows, DEFAULT_ROWS_FOR_ORIENTATION(orientation)), notchInfo, orientation);
}

%end

%end

/* }}} */
/* Constructor {{{ */

__attribute__((constructor)) static void infinifolders_init() {
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];

    if (![[[NSBundle mainBundle] bundleIdentifier] isEqualToString:@"com.apple.springboard"])
        return;

    NSLog(@"Welcome to Infinifolders.");

    IFPreferencesInitialize(@"com.chpwn.infinifolders", IFPreferencesApply);

    dlopen("/Library/MobileSubstrate/DynamicLibraries/IconSupport.dylib", RTLD_LAZY);
    [[objc_getClass("ISIconSupport") sharedInstance] addExtension:@"infinifolders"];

    scrollies = [[NSMutableArray alloc] init];
    listies = [[NSMutableArray alloc] init];

    %init(IFBasic);
    %init(IFInfinifolders);
    infinishared_init();

    [pool release];
}

/* }}} */

