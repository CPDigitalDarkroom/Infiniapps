
/* Configuration {{{ */
#define IFConfigurationListClass SBFolderIconListView
#define IFConfigurationBottomPadding (IFDeviceIsPad() ? (UIInterfaceOrientationIsLandscape([IFIconControllerSharedInstance() orientation]) ? -8.0f : -13.0f) : 3.0f)
/* }}} */

#import "infinishared/Infinilist.h"

/* Prototypes {{{ */

@interface SBFolderIcon : NSObject

- (int)_numberOfExcessIcons;
- (int)_maxIcons;
- (int)_gridColumns;
- (id)_miniIconGridWithSkipping:(BOOL)skipping;
- (id)folder;

@end

typedef struct { int direction; CGRect rect; } SBNotchInfo;

/* }}} */

/* IFInfinifolders {{{ */

%group IFInfinifolders

%hook SBFolderIcon

- (unsigned int)_numberOfExcessIcons {
    // FIXME: This is a lie (maxIcons % 3 != 0).
    return 0;
}

static int disableMaxFlag = 0;

- (NSUInteger)_maxIcons {
    if (disableMaxFlag > 0) {
        // Tihs fixes a speed issue on iOS 5 with too large of an image backing the folder icons.
        NSUInteger icons = [[[[[self folder] lists] lastObject] icons] count];
        icons += [self _gridColumns];

        NSUInteger orig = 0;

        IFFlag(IFFlagDefaultDimensions) {
            orig = %orig;
        }

        if (icons < orig) icons = orig;

        return icons;
    } else {
        return %orig;
    }
}

- (id)_miniIconGridWithSkipping:(BOOL)skipping {
    id orig = nil;

    IFFlag(disableMaxFlag) {
        orig = %orig;
    }

    return orig;
}

%end

%hook SBFolder

- (BOOL)isFull {
    return NO;
}

%end

%hook SBIconController

- (void)_openCloseFolderAnimationEnded:(id)ended finished:(id)finished context:(void *)context {
    // FIXME: Find the open folder list view (and thus scroll view) in a better way than querying our arrays.
    if ([IFListsScrollViews count] > 0) [[IFListsScrollViews objectAtIndex:0] flashScrollIndicators];
    %orig;
}

%end

%hook SBFolderView

- (id)initWithRows:(int)rows notchInfo:(SBNotchInfo)notchInfo {
    return %orig(MIN(rows, _IFSizingDefaultDimensionsForOrientation([IFIconControllerSharedInstance() orientation]).rows), notchInfo);
}

- (id)initWithRows:(int)rows notchInfo:(SBNotchInfo)notchInfo orientation:(int)orientation {
    return %orig(MIN(rows, _IFSizingDefaultDimensionsForOrientation(orientation).rows), notchInfo, orientation);
}

- (void)setRows:(int)rows notchInfo:(SBNotchInfo)notchInfo orientation:(int)orientation {
    return %orig(MIN(rows, _IFSizingDefaultDimensionsForOrientation(orientation).rows), notchInfo, orientation);
}

%end

%end

/* }}} */

/* Constructor {{{ */

__attribute__((constructor)) static void infinifolders_init() {
    NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];

    IFPreferencesInitialize(@"com.chpwn.infinifolders", IFPreferencesApply);

    dlopen("/Library/MobileSubstrate/DynamicLibraries/IconSupport.dylib", RTLD_LAZY);
    [[objc_getClass("ISIconSupport") sharedInstance] addExtension:@"infinifolders"];

    %init(IFBasic);
    %init(IFInfinifolders);

    [pool release];
}

/* }}} */

